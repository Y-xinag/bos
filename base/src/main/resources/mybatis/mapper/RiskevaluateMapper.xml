<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.xr.mapper.RiskevaluateMapper">
  <resultMap id="BaseResultMap" type="com.xr.entity.Riskevaluate">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="dispositionTitile" jdbcType="VARCHAR" property="dispositiontitile" />
    <result column="dispositionContent" jdbcType="VARCHAR" property="dispositioncontent" />
    <result column="createDate" jdbcType="TIMESTAMP" property="createdate" />
    <result column="departmentID" jdbcType="INTEGER" property="departmentid" />
    <result column="positionID" jdbcType="INTEGER" property="positionid" />
    <result column="riskLevelID" jdbcType="INTEGER" property="risklevelid" />
    <result column="disposeResult" jdbcType="VARCHAR" property="disposeresult" />
    <result column="loginID" jdbcType="INTEGER" property="loginid" />
    <result column="createName" jdbcType="VARCHAR" property="createname" />
    <result column="state" jdbcType="INTEGER" property="state" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, dispositionTitile, dispositionContent, createDate, departmentID, positionID, 
    riskLevelID, disposeResult, loginID, createName, state
  </sql>
  <select id="selectByExample" parameterType="com.xr.entity.RiskevaluateExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from riskevaluate
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from riskevaluate
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from riskevaluate
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.xr.entity.RiskevaluateExample">
    delete from riskevaluate
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.xr.entity.Riskevaluate">
    insert into riskevaluate (id, dispositionTitile, dispositionContent, 
      createDate, departmentID, positionID, 
      riskLevelID, disposeResult, loginID, 
      createName, state)
    values (#{id,jdbcType=INTEGER}, #{dispositiontitile,jdbcType=VARCHAR}, #{dispositioncontent,jdbcType=VARCHAR}, 
      #{createdate,jdbcType=TIMESTAMP}, #{departmentid,jdbcType=INTEGER}, #{positionid,jdbcType=INTEGER}, 
      #{risklevelid,jdbcType=INTEGER}, #{disposeresult,jdbcType=VARCHAR}, #{loginid,jdbcType=INTEGER}, 
      #{createname,jdbcType=VARCHAR}, #{state,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.xr.entity.Riskevaluate">
    insert into riskevaluate
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="dispositiontitile != null">
        dispositionTitile,
      </if>
      <if test="dispositioncontent != null">
        dispositionContent,
      </if>
      <if test="createdate != null">
        createDate,
      </if>
      <if test="departmentid != null">
        departmentID,
      </if>
      <if test="positionid != null">
        positionID,
      </if>
      <if test="risklevelid != null">
        riskLevelID,
      </if>
      <if test="disposeresult != null">
        disposeResult,
      </if>
      <if test="loginid != null">
        loginID,
      </if>
      <if test="createname != null">
        createName,
      </if>
      <if test="state != null">
        state,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="dispositiontitile != null">
        #{dispositiontitile,jdbcType=VARCHAR},
      </if>
      <if test="dispositioncontent != null">
        #{dispositioncontent,jdbcType=VARCHAR},
      </if>
      <if test="createdate != null">
        #{createdate,jdbcType=TIMESTAMP},
      </if>
      <if test="departmentid != null">
        #{departmentid,jdbcType=INTEGER},
      </if>
      <if test="positionid != null">
        #{positionid,jdbcType=INTEGER},
      </if>
      <if test="risklevelid != null">
        #{risklevelid,jdbcType=INTEGER},
      </if>
      <if test="disposeresult != null">
        #{disposeresult,jdbcType=VARCHAR},
      </if>
      <if test="loginid != null">
        #{loginid,jdbcType=INTEGER},
      </if>
      <if test="createname != null">
        #{createname,jdbcType=VARCHAR},
      </if>
      <if test="state != null">
        #{state,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.xr.entity.RiskevaluateExample" resultType="java.lang.Long">
    select count(*) from riskevaluate
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update riskevaluate
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.dispositiontitile != null">
        dispositionTitile = #{record.dispositiontitile,jdbcType=VARCHAR},
      </if>
      <if test="record.dispositioncontent != null">
        dispositionContent = #{record.dispositioncontent,jdbcType=VARCHAR},
      </if>
      <if test="record.createdate != null">
        createDate = #{record.createdate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.departmentid != null">
        departmentID = #{record.departmentid,jdbcType=INTEGER},
      </if>
      <if test="record.positionid != null">
        positionID = #{record.positionid,jdbcType=INTEGER},
      </if>
      <if test="record.risklevelid != null">
        riskLevelID = #{record.risklevelid,jdbcType=INTEGER},
      </if>
      <if test="record.disposeresult != null">
        disposeResult = #{record.disposeresult,jdbcType=VARCHAR},
      </if>
      <if test="record.loginid != null">
        loginID = #{record.loginid,jdbcType=INTEGER},
      </if>
      <if test="record.createname != null">
        createName = #{record.createname,jdbcType=VARCHAR},
      </if>
      <if test="record.state != null">
        state = #{record.state,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update riskevaluate
    set id = #{record.id,jdbcType=INTEGER},
      dispositionTitile = #{record.dispositiontitile,jdbcType=VARCHAR},
      dispositionContent = #{record.dispositioncontent,jdbcType=VARCHAR},
      createDate = #{record.createdate,jdbcType=TIMESTAMP},
      departmentID = #{record.departmentid,jdbcType=INTEGER},
      positionID = #{record.positionid,jdbcType=INTEGER},
      riskLevelID = #{record.risklevelid,jdbcType=INTEGER},
      disposeResult = #{record.disposeresult,jdbcType=VARCHAR},
      loginID = #{record.loginid,jdbcType=INTEGER},
      createName = #{record.createname,jdbcType=VARCHAR},
      state = #{record.state,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.xr.entity.Riskevaluate">
    update riskevaluate
    <set>
      <if test="dispositiontitile != null">
        dispositionTitile = #{dispositiontitile,jdbcType=VARCHAR},
      </if>
      <if test="dispositioncontent != null">
        dispositionContent = #{dispositioncontent,jdbcType=VARCHAR},
      </if>
      <if test="createdate != null">
        createDate = #{createdate,jdbcType=TIMESTAMP},
      </if>
      <if test="departmentid != null">
        departmentID = #{departmentid,jdbcType=INTEGER},
      </if>
      <if test="positionid != null">
        positionID = #{positionid,jdbcType=INTEGER},
      </if>
      <if test="risklevelid != null">
        riskLevelID = #{risklevelid,jdbcType=INTEGER},
      </if>
      <if test="disposeresult != null">
        disposeResult = #{disposeresult,jdbcType=VARCHAR},
      </if>
      <if test="loginid != null">
        loginID = #{loginid,jdbcType=INTEGER},
      </if>
      <if test="createname != null">
        createName = #{createname,jdbcType=VARCHAR},
      </if>
      <if test="state != null">
        state = #{state,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.xr.entity.Riskevaluate">
    update riskevaluate
    set dispositionTitile = #{dispositiontitile,jdbcType=VARCHAR},
      dispositionContent = #{dispositioncontent,jdbcType=VARCHAR},
      createDate = #{createdate,jdbcType=TIMESTAMP},
      departmentID = #{departmentid,jdbcType=INTEGER},
      positionID = #{positionid,jdbcType=INTEGER},
      riskLevelID = #{risklevelid,jdbcType=INTEGER},
      disposeResult = #{disposeresult,jdbcType=VARCHAR},
      loginID = #{loginid,jdbcType=INTEGER},
      createName = #{createname,jdbcType=VARCHAR},
      state = #{state,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>